/*4행부터 9행까지가 main함수. 
머리와 몸통으로 구성되는데, 4행이 머리, 5행부터 9행이 몸통.*/

int main(void) 
{
	10 + 20;      <---------   세미클론(;)을 사용하여 문장의 끝을 표기해야한다. 6번에서 ;을 사용하지 않으면 컴파일러는 8행까지를 한 문장으로 인식하여 에러를 표시한다.

	return 0;
}

// 출력을 담당하는 함수를 사용하지 않았기 때문에 컴파일하고 실행해도 결과로 아무것도 확인할 수 없다. 
// 따라서 연산 결과를 화면으로 확인하려면 출력을 담당하는 함수를 사용해야 한다.

/* ~ */: /*와 */ 사이의 모든 내용을 주석 처리
//: //부터 해당 줄의 끝까지 주석 처리

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include <stdio.h>    // stdio : standard input output (표준입출력)의 줄임말  <---- 이 행은 전처리 단계에서 처리되는 문장이다. stdio.h 파일의 내용을 프로그램 안에 복사한다는 의미이다.
                                                                                  stdio.h 안에는 C언어에서 기본으로 사용하는 입출력 함수가 들어 있다.
int main(void) 
{
	printf("Be happy");  // 문자열 "Be happy" 출력       <---- 'a'처럼 글자 하나만 있으면 문자라고 하고, "apple"처럼 글자가 연달아 있으면 문자열이라고 한다.
	printf("My friend"); // 문자열 "My friend" 출력
	return 0;
}

// printf : 화면에 데이터를 출력하는 함수. print formatted

* format 뜻
1 : (책, 잡지, 텔레비전, 라디오 프로그램 같은) 어떤 것의 형식·기획·배열
2 : 컴퓨터 디스크에 정보를 저장하는 방식 <<포맷>> */

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include <stdio.h>

int main(void)
{
	printf("Be happy\n");
	printf("1234567890\n");
	printf("my\tfriend\n");
	printf("Goot\bd\tchance\n");
	printf("Cow\rW\a\n");   < ---- \r을 이용해서 맨 앞으로 간다는 것이 Cow의 앞이 아니라 C위에 올라간다는 말이다. 따라서 이 줄에서는 WCow가 아니라 Wow가 출력된다.

	return 0;
}

* 제어문자 : 문자는 아니지만, 출력 방식에 영향을 주는 문자를 의미한다

//   \n (개행, new line) : 다음 줄로 이동
//   \t : 현재의 커서 위치에서 다음 탭 위치로 이동한다.
//   \b (백스페이스, backspace) : 한 칸 왼쪽으로 이동 [ p.30에 정확한 설명 있음 ]
//   \r (캐리지 리턴, carriage return) : 맨 앞으로 이동
//   \a (알럿 경보, alert) : 벨소리

* /r 헷갈리는 것                        Berrrrrrrrrr

printf("Be\rHappy!") 라는 문장이 어떻게 출력될까?             정답은 Happy!이다.   처음에는 Happy!e라고 생각했다.
그 이유는 \r 이라는 제어문자는 앞에서 차례대로 하나씩 문자를 지우면서 나아간다.
따라서 printf("Berrrrrrrrrr\rHappy!");  이 문장은    Happy! rrrrr 이렇게 출력이 된다. 
(중간에 띄어쓰기가 되는건 이유를 정확히 모르겠다. 그런데 띄어쓰기가 없다면 원래는 Happy!rrrrrr 이렇게 출력되어야한다. 왜 그런걸까...???)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include <stdio.h>

int main(void)
{
	printf("%d\n", 10);      -->  10이 %d 위치에 출력된다.
	printf("%lf\n", 3.4);     -->  3.4가 %lf 위치에 출력된다.
	printf("%.1lf\n", 3.45);   // %.1lf  -->  소수점 이하 첫째 자리까지 출력 (둘째 자리에서 반올림)
	printf("%.10lf\n", 3.4);    // %.10lf  -->  소수점 이하 열번째 자리까지 출력 (열한번째 자리에서 반올림)

	printf("%d와 %d의 합은 %d입니다.\n", 10, 20, 10 + 20);
	printf("%.1lf-%.1lf = %.1lf\n", 3.4, 1.2, 3.4 - 1.2);

	return 0;
}

// printf("%d\n", 10);  -->  10이 %d 위치에 출력된다.
// printf("%lf\n", 3.4);  -->  3.4가 %lf 위치에 출력된다.

// printf("%.1lf\n", 3.45);  -->  소수점 이하 첫째 자리까지 출력 (둘째 자리에서 반올림)

// printf 함수는 기본적으로 문자열을 출력하는 함수이다. 따라서 숫자를 출력할 때는 변환 문자를 사용해서 문자열로 변환하는 과정이 필요하다.
// 변환 문자는 데이터의 형태에 따라 다르다. 

// %d는 정수, %lf는 실수  ---> %d는 decimal, %lf는 long float의 줄임말이다.

* decimal 뜻
1. 10진법

* long float은 왜 이게 실수를 의미하는지 잘 모르겠다.
