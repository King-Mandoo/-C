2022. 04. 13.  7주차 수업

🟡 while 문

--> while문은 for문과 용도가 같지만 사용하는 방법이 조금 다르다.

🟢 for문과 while문의 비교

	int i;

	for (i = 0; i < 10; i++)
	{
		printf("%d\n", i);
	}
  
  --------------------------

	int i;
  
	i = 0;
	for (; i < 10;)
	{
		printf("%d\n", i);
		i++;
	}
  
  ---------------------------
  
  int i;
  
	i = 0;
	while (i < 10)                  <-- 이렇게 된다.
	{
		printf("%d\n", i);
		i++;
	}
  
  
🟢 무한 루프를 위한 while문

--> for문의 무한 루프를 이용하려면 for( ; ; )와 같이 표현해야한다.
    하지만 while문은 while(1) 또는 while(true)이라고 하면 된다.
    
    
    #include <stdio.h>

      int main(void)
      {
        int a, b;

        while (true)
        {
          printf("두 수 입력 (멈추려면 ctrl + c)\n");
          scanf("%d %d", &a, &b);

          printf("%d + %d = %d\n", a, b, a + b);
        }
      }

------------------------------------------------------------------

#include <stdio.h>

int main(void)
{
	int a, b;
	char c;

	while (1)
	{
		printf("두 수 입력 (멈추려면 ctrl + c)\n");
		scanf("%d %d", &a, &b);

		printf("연산자 입력\n");
		scanf(" %c", &c);          <--- 🎈🎈 %c 다음 한칸 띄어줘야하는거 꼭 기억하기!!

		switch (c)
		{
		case '+':
			printf("%d + %d = %d\n", a, b, a + b);
			break;
		case '-':
			printf("%d - %d = %d\n", a, b, a - b);
			break;
		case '*':
			printf("%d * %d = %d\n", a, b, a * b);
			break;
		case '/':
			printf("%d / %d = %d\n", a, b, a / b);
			break;
		case '%':
			printf("%d %% %d = %d\n", a, b, a % b);
			break;
		default:
			printf("다시 입력\n");
		}
	}
}


    
🟡 do ~ while문
    
🟢 do~while문과 while문의 차이
    
    
    
    #include <stdio.h>

    int main(void)
    {
      int a = 200;

      while (a == 100)
      {
        printf("실행");          <-- while 문은 조건에 충족되지 않으므로 "실행"을 출력하지 않지만,
      }

      do
      {
        printf("이것도 실행");       <-- do ~ while문은 조건에 충족되지 않더라도 한번은 출력한다. 따라서 "이것도 실행"을 한번 출력시킨다.
      }
      while (a == 100);

    }
    
    
 -------------------------------------------------------------------------------------------------------------------------------------------------------
 
 
 #include <stdio.h>

int main(void)
{
	int menu;
	do
	{
		printf("손님 주문하실랍숑~?\n");
		printf("1.카페라때 2.카푸치노 3.아메리카노 4.주문안할래요 -3-;\n");
		scanf("%d", &menu);

		switch (menu)
		{
		case 1: printf("카페라때 드숑~\n"); break;
		case 2: printf("카푸치노 드숑~\n"); break;
		case 3: printf("아메리카노 드숑~\n"); break;
		case 4: printf("안녕히가숑~\n"); break;
		default: printf("주문해주숑~\n");
		}
	} while (menu != 4);
}
    
    
-----------------------------------------------------------------------------------------

🔻🔻 if문으로 변경해봤다.

#include <stdio.h>

int main(void)
{
	int menu = 0;

	while (menu != 4)
	{
		printf("손님 주문하실랍숑~?\n");
		printf("1.카페라때 2.카푸치노 3.아메리카노 4.주문안할래요 -3-;\n");
		scanf("%d", &menu);

		if (menu == 1)
		{
			printf("카페라때 드숑~\n");
		}
		else if (menu == 2)
		{
			printf("카푸치노 드숑~\n");
		}
		else if (menu == 3)
		{
			printf("아메리카노 드숑~\n");
		}
		else if (menu == 4)
		{
			printf("안녕히가숑~\n");
		}
		else
		{
			printf("주문해주숑~\n");
		}
	}
}
    
-----------------------------------------------------------------------------------------   
    
🟡 기타 제어문

🟢 반복문을 탈출하는 break문
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
