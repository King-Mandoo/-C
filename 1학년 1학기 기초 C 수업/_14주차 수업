2022. 06. 02.

🟡 표준 입출력 함수

   표준 입력 장치(키보드) --> 표준 입력 (stdin, standard input) 함수 --> C 프로그램 --> 표준 출력 (stdout, standard output) 함수 --> 표준 출력 장치(모니터)
                                  ex) scanf(), gets(), getchar()                           ex) printf(), puts(), putchar()
   
   
   🎈🎈 표준 입력인 키보드와 표준 출력인 모니터를 통틀어서 콘솔(console)이라고도 한다.
        콘솔이란 대개 디스플레이 모니터와 키보드(또는 입력이 가능한 다른 장치)가 조합된 장치를 말한다.
   
🟠 서식화된 입출력 함수
  
    * printf("서식", 출력할 매개변수);
    * scanf("서식", 출력할 매개변수);
   
    ------------------------
    서식              설명
    ------------------------
    %d         -->    정수형(int)
    %c         -->    문자형(char)
    %s         -->    문자열(char*) 또는 문자 배열(char[])
    %x         -->    16진수 정수(int)
    %o         -->    8진수 정수(int)
    %f, %lf    -->    실수형(float, double)
    
    %e         -->    공학 계산용 형식       🎈🎈 double a = 0.00314;  -->  3.14e-3
                                                  double b = 0.000314;  -->  3.14e-4
                                                  double c =  0.0000314;  -->  3.14e-5
                                       
                                             
    %p         -->    포인터 주소       🎈🎈 %p는 변수의 주소를 16진수로 표현할 때 쓰임.
    
-------------------------------------------
    
#include <stdio.h>

int main()
{
	int a;
	float b;
	char ch;
	char s[20];

	printf("정수: ");     
	scanf("%d", &a);
	printf("실수: ");
	scanf("%f", &b);
	printf("문자: ");
	scanf(" %c", &ch);
	printf("문자열: ");
	scanf("%s", s);

	printf("a: %d\n", a);
	printf("b: %f\n", b);
	printf("실수를 공학 계산용 형식으로: %e\n", b);
	printf("c: %c\n", ch);
	printf("s: %s\n", s);
	printf("s의 주소: %p\n", s);
	printf("s의 주소: %X\n", s);

	int i = 3;
	int* p = &i;

	printf("%d\n", &i);
	printf("%d\n", p);
	printf("%p\n", &i);
	printf("%p\n", p);   //   🎈🎈 %p는 변수의 주소를 16진수로 표현할 때 쓰임.

	return 0;
}

-----------------------------------------------------------------------------

🟠 문자열 입출력 함수

  * gets(문자 배열)  :  scanf() 함수는 문자열 중간에 공백 문자(space)를 입력할 수 없지만, gets() 함수는 공백 문자를 입력할 수 있다.
  
  * puts(문자 배열)  :  자동으로 '\n'을 해줌
 

#include <stdio.h>

int main()
{
	char aa[100];

	gets(aa);
	
	puts(aa);
	printf("%s\n", aa);

	scanf("%s", aa);

	puts(aa);
	printf("%s\n", aa);

	return 0;
}

-----------------------------------------------------------------------------

🟠 문자 입출력 함수

     * getch()   : 키보드를 통해 문자 하나를 입력받으며, 입력한 내용을 모니터에 보여주지 않는다.
     
     * getche()  : 키보드를 통해 문자 하나를 입력받으며, 입력한 내용을 모니터에 보여준다.
     
     * getchar() : 사용자가 키보드로 Enter를 누를 때까지 입력한 것을 메모리(버퍼)에 모두 저장해 놓고(Enter도 저장됨) 그중에서 한 문자만 꺼낸다.



     * putchar() : 표준 출력 장치(모니터)에 문자 하나를 출력한다.
     
     * putch()   : putchar()와 기능이 동일

 
    🔷 getch()    🎈🎈(버퍼 사용 X)
          
	-->  키보드를 통해 문자 하나를 입력받으며, 입력한 내용을 모니터에 보여주지 않는다.
	
#include <stdio.h>

int main()
{
	char ch;

	ch = getch();
	putchar(ch);   

	ch = getch();
	putch('\n');       <-- 줄바꿈을 해줌

	ch = getch();
	putchar(ch);

	return 0;
}

---------------------------------------------------------------

#include <stdio.h>
#include <string.h>

int main()
{
	char password[5] = "5678";
	char input[5];

	for (int i = 0; i < 4; i++)
	{
		input[i] = getch();
		putchar('*');
	}

	printf("\n");

	if (strncmp(password, input, 4) == 0)      
		printf("문이 열렸습니다\n");
	else
		printf("비번이 틀렸습니다\n");

	printf("입력한 비밀번호: ");

	for (int i = 0; i < 4; i++)
		putchar(input[i]);

	return 0;
}

       ✅ Q. strcmp() 와 strncmp()의 차이
       
           A.▶ strcmp(str1, str2)
	        첫번째 매개변수 
	        str1 : 비교할 문자열1
		두번재 매개변수
	        str2 : 비교할 문자열2
	   
	     ▶ strncmp (str1, str2, n)
	        첫번째 매개변수 str1 : 비교할 문자열1
	        두번재 매개변수 str2 : 비교할 문자열2
	        세번째 매개변수 n : 비교할 문자열 길이  
						
						출처: https://blockdmask.tistory.com/391 [개발자 지망생:티스토리]
       


       🎈🎈 만약 strncmp() 말고 strcmp()를 사용하고싶다면..  이렇게 --> if (strcmp(password, input) == 0)
	
	   -->    input[4] = '\0';  이렇게 input의 마지막에 널문자를 넣어줘야함.

	     사실 위의 input[4] = '\0'; 이게 왜 필요한지 모르겠다.
	     널문자는 문자열에 자동으로 채워주는 거 아닌가???
	     배열 input은 사용자가 입력을 해주기 때문에 널문자가 자동으로 생기지 않는건가???
	     
 
           

    🔷 getche()    🎈🎈(버퍼 사용 X)    
     
         -->  

